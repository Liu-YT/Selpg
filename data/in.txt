// DFS + 迭代
class Solution {
public:
    vector<string> findItinerary(vector<pair<string, string>> tickets) {
        vector<string> v;
        map<string, multiset<string> > myMap;
        for(auto it : tickets)
        	myMap[it.first].insert(it.second);

        stack<string> myStack;
        myStack.push("JFK");
        while(!myStack.empty()) {
        	string node = myStack.top();
        	
        	if(!myMap[node].size()) {
        		myStack.pop();
        		v.push_back(node);
        	} 
        	else {
        		myStack.push(*myMap[node].begin());
        		myMap[node].erase(myMap[node].begin());
        	}
        }
        reverse(v.begin(), v.end());
        return v;
    }
};